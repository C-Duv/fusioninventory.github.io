# NAME

fusioninventory-agent - FusionInventory agent For Linux/UNIX, Windows and MacOSX

# SYNOPSIS

__fusioninventory-agent__ \[&nbsp;...&nbsp;\] \[&nbsp;_\--server&nbsp;server_&nbsp;|&nbsp;_\--local&nbsp;/tmp_&nbsp;\]...

# EXAMPLES

    % fusioninventory-agent --server localhost
    # send an inventory to the OCS server

    % fusioninventory-agent --server http://localhost/ocsinventory2
    # send an inventory over http to a server with a non standard
    # virtual directory

    % fusioninventory-agent --server https://localhost/ocsinventory
    # send an inventory over https to the OCS server

    % fusioninventory-agent --local /tmp
    # write an inventory in the /tmp directory

    % fusioninventory-agent --local /tmp --html
    # Use the --html parameter to generate a HTML file

    % fusioninventory-agent --server localhost --user=toto --password=pw --realm="Restricted Area"
    # send a report to a server protected by a basic authentication
    % fusioninventory-agent --lazy
    # send an inventory only if a random delay between 0 and PROLOG_FREQ had been run over.

    % fusioninventory-agent --delaytime 60 -d
    # If NO PROLOG_FREQ has been preset, pick a time between execution and --delaytime for the agent to contact the server [default is 3600 seconds]

# DESCRIPTION

`fusioninventory-agent` is an agent for OCS Inventory server and
FusionInventory for GLPI servers. It creates local inventory of the machines
(hardware and software) and send it to the server. It can also write it
in a local XML file.
This agent is the successor of the former linux\_agent which was released with
OCS 1.01 and prior. It also replaces the Solaris/AIX/BSD unofficial agents.

Supported systems:

- `Windows` (since Windows 2000)
- `GNU/Linux`
- `MacOSX`
- `Solaris`
- `FreeBSD`
- `NetBSD`
- `OpenBSD`
- `AIX`
- `HP-UX`
- `GNU/kFreeBSD`

# INSTALLATION

## PREREQUISITES

Minimum perl version: 5.8

The which command on UNIX/Linux/MacOSX system.

Additional mandatory perl modules:

- Digest::MD5
- XML::Simple
- LWP
- Net::IP
- UNIVERSAL::require
- Mac::SysProfile (MacOs only)

Additional optional perl modules:

- Compress::Zlib, for message compression
- HTTP::Daemon, for web interface
- Net::CUPS (v0.60 minimum), for printers detection 
- File::ShareDir, for automatic data directory determination
- Proc::Daemon, for daemon mode (Unix only)
- Proc::PID::File, for daemon mode (Unix only)

Additional optional programs:

- nmap or ipdiscover, for network discovery
- dmidecode (linux or bsd) for hardware inventory
- lspci (linux or bsd) for hardware inventory

## PROCEDURE

Once the archive is unpacked, use these commands:

    perl Makefile.PL
    make
    make install

You can also run the agent from the tarball directory. In this case, use
the --devlib flag to load the library from the local directory.

## SYSTEM-SPECIFIC INFORMATIONS

### Solaris

Sun Studio seems to be needed to build the dependency. The generated Makefile
needs gmake to be executed. The default installation will install the binary in
/usr/perl5/5.XXXXX/bin, set you $PATH variable according to that.

On Solaris/SPARC, you must install sneep and record the Serial Number with
it.
Download it from [http://www.sun.com/download/products.xml?id=4304155a](http://www.sun.com/download/products.xml?id=4304155a)

### Windows

If you don't want to use the installer for Windows you can follow the
installation process avalaible there:
[http://forge.fusioninventory.org/projects/fusioninventory-agent/wiki/RunAgentWin32](http://forge.fusioninventory.org/projects/fusioninventory-agent/wiki/RunAgentWin32)

## POST-INSTALLATION

Run ./fusioninventory-agent-config for automatic configuration.

# OCS INVENTORY PROTOCOL

FusionInventory Agent uses OCS Inventory protocol and is compatible with OCS
Inventory server. The agent uses the same protocol with the FusionInventory
For GLPI plugin.

The OCS protocol is basicly an exchange of XML file done over HTTP(S).

## First, The PROLOG

The agent send a first message to give it's ID (DEVICEID). The
server send back to the agent an XML file with a list of parameter. It's the
PROLOG RESP. You can see it if you're in Debug mode.
In this PROLOG, the server send the PROLOG\_FREQ. The agent will use it to
know when it need to contact the server for the next time.

The agent compute the next query date this way:

     PROLOG_FREQ/2+RANDOM(PROLOG_FREQ/2)



## Module execution

The agent will launch each modules and pass the list of options found in the
PROLOG RESP as parameter. The module can send information directly to the
server (inventory, SNMP scan result, etc)

## Windows service or Deamon mode

In deamon mode, the agent wait during a period between the last PROLOG and
PROLOG\_FREQ. If PROLOG\_FREQ is not set, it will use --delaytime value.
The default value is 3600.

# OPTIONS

Most of the options are available in a _short_ form and a _long_ form.  For
example, the two lines below are all equivalent:

    % fusioninventory-agent -s localhost
    % fusioninventory-agent --server localhost

- __\--backend-collect-timeout=SECONDS\_BEFORE\_KILL__

Time before the agent kills modules processing which don't end before the
timeout.

- __\--basevardir__=_DIR_

Indicate the place where the agent should store its files.

- __\--color__

Display color on the terminal. This feature is disabled on Windows.

- __\-d__, __\--daemon__

Launch fusioninventory-agent as daemon in background. Proc::Daemon is needed.

- __\-D__, __\--daemon-no-fork__

Launch fusioninventory-agent in daemon but do fork in background.

- __\--ca-cert-dir__=_PATH_

The directory where public SSL certificates are stored. In general it's
/etc/ssl/certs.

You don't need to copy a public certificate on very agent if your private
key is valide and was been signed by a valide certificate authority.

- __\--ca-cert-file__=_FILE_

The path to the public certificate (e.g: /etc/ssl/certs/cacert.pem). If
\--ca-cert-file is used, --ca-cert-dir is ignored.

You don't need to copy a public certificate on very agent if your private
key is valide and was been signed by a valide certificate authority.

- __\--conf-file__=_FILE_

Load the configuration file from the given location. Ignored on Windows.

On Windows the settings are loaded from the registry. The information are
stored there:
HKEY\_LOCAL\_MACHINE\\SOFTWARE\\FusionInventory-Agent

Or on Windows 64bit machine:
HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Wow6432Node\\FusionInventory-Agent

- __\--debug__

Turn the debug mode on.

- __\--devlib__

This option is designed for the developer. With it enabled,
fusioninventory-agent won't try to load the Backend module installed
on the system. Instead it will scan the ./lib directory.
It may also be useful if you don't want to install the agent on
your system.

This option can only be used as command line argument. It will be
ignored if you set it in a config file or in Windows registry.

- __\--delaytime=SECONDS\_TO\_WAIT__

This option defaults to waiting a random() time between 0 and 3600 before
initially contacting the server assuming NO PROLOG\_FREQ has been set.
Once PROLOG\_FREQ has been set, it uses that number at the top end of
it's random setting. Useful for pre-setting a deployed agent's initial
start time (so you don't jam the server all at once, but don't have to
wait an hour to make sure the deployment worked).

- __\--disable-perllib-envvar__

Do not use PERL5LIB and PERLLIB environment variable to find Perl library
path.

This option can only be used as command line argument. It will be
ignored if you set it in a config file or in Windows registry.

- __\-f__, __\--force__

The agent ask first the server if it should send an inventoroy of the
machine. If the server doesn't know the machine or has outdated
informations, it will request it.
With this option, the agent ignore the server anwser and send an inventory.

- __\--html__

Save the local inventory requested by __\--local__ in HTML.

- __\-i__, __\--info__

Turn the verbose mode on. The flag is ignored if __\--debug__ is enable.

- __\--lazy__

Do not contact the server more than one time during the PROLOG\_FREQ and do
an exit if there is nothing to do. Useful if you want to start the agent
script regulary from the crontab but don't want to overload the server.

- __\-l__, __\--local__=_DIR_

Write an inventory in the _DIR_ directory. A new file will be created if needed.

- __\--logfile__=_FILE_

Log message in _FILE_ and turn off STDERR

- __\--logfile-maxsize__=_FILE_

Max logfile size in MB, default is unlimited. When the max size is reached, the
file is truncated. This is only useful if there is no log rotation mechanism on
the system.

- __\--logger__=_LOGGER:_

The logger you want to use. It can be:

            - Stderr: print the messages directly in the console. Messages are lost in
            daemon mode (__\--daemon__). You can use __\--color__ to turn color mode on.
        - File: log the error in a log file. Please use __\--logfile__ to set the
        location of your log file. __\--logfile__ turns this option on automatically
    - Syslog: use the local syslog server to log the messages.

You can use more than one parameter if you use ',' as delimiter. E.g:

    % fusioinventory-agent --logger=Syslog,Stderr --local=/tmp

- __\--no-deploy__

Disable the software deployment (new module).

- __\--no-esx__

Disable the ESX inventory task.

- __\--no-ocsdeploy__

Disable the software deployment (OCS compatible module).

- __\--no-inventory__

Do not generate inventory.

- __\--no-wakeonlan__

Do not use the wakeonlan.

- __\--no-printer__

Do not inventory the printer.

- __\--no-software__

Do not inventory the software installed on the machine.

- __\--no-p2p__

For OCS Inventory software deployment. Do not use peer 2 peer to download files.

- __\-p__, __\--password__=_PASSWORD_

Use _PASSWORD_ for an HTTP authentification with the server.

- __\-P__, __\--proxy__=_PROXY_

Use _PROXY_ to specify a proxy HTTP server. By default, the agent uses
HTTP\_PROXY environment variable.

- __\-r__, __\--realm__=_REALM_

Use _REALM_ for an HTTP authentification with the server. For example, the
value can be 'Restricted Area'. You can find it in the login popup of your
Internet browser.

if no realm is passed and the auth fails, the agent will retry an authentification
with the realm returned by the server.

- __\--rpc-ip__=_IP_

The IP address of the interface to use for the P2P exchange. The default
is 'all' the IP addresses with a 255.255.255.0 mask except 127.0.0.1.

- __\--rpc-port__=_PORT_

The PORT of the interface to use for the embedded HTTP server used for the
peer to peer data exchange and remote control. The default
is '62354'.

- __\--rpc-trust-localhost__

Allow local users to access to http://127.0.0.1:62354/now to force an
inventory immediately.

- __\--scan-homedirs__

Should the agent scan the user directories to inventory their virtual machines ?.

- __\-s__, __\--server__=_URI_

The uri of the server. If _URI_ doesn't start with http:// or https://, the
agent assume the parameter is a hostname and rewrite it like that:

    % --server=http://servername/ocsinventory

If you want to use https or another virtual directory (e.g: /ocsinventory2)
you need to enter the full path.

You can declare more than one server if you use the ',' delimiter.

    % --server=http://servername/ocsinventory,server2

In general, OCS Inventory server URL have this format:

    http://servername/ocsinventory

and FusionInventory for GLPI this one:

    http://servername/glpi/plugins/fusioninventory/front/plugin_fusioninventory.communication.php

__\--server__ is ignored if __\--local__ is in use.

- __\--share-dir__

The directory where are stored the shared files. You probably don't
need this option unless you don't want to use the Makefile.PL installation
procedure or if File::ShareDir is not avalaible.

- __\--stdout__

Print the inventory on stdout.

    % fusioninventory-agent --stdout > /tmp/report.xml
    # prepare an inventory and write it in the /tmp/report.xml file.
    # A file will be created.

- __\--scan-homedirs__

Authorize the agent to scan home directories to help with the Virtual Machines
inventory.

- __\--tag__=_TAG_

Mark the machine with the _TAG_ tag. Once the initial inventory
is accepted by the server this value is ignored and you've to
change the information directly on the server. The server do so
in order to centralize the administration of the machine.

- __\--no-ssl-check__

Do now validate HTTPS certificat with the servers. Please never use this
option in production. This is just a very bad idea.

Hint: you can declare HTTPS\_DEBUG to get SSL error messages in the console.

- __\-u__ _USER_, __\--user__=_USER_

Use _USER_ for the server authentication.

- __\--version__

Print the version and exit.

- __\-w__ _DURATION_, __\--wait__=_DURATION_

Wait during a random period between 0 and DURATION second before initializing
the connexion with the server.

    % fusioninventory-agent --wait 5 --server localhost



# CONFIG FILE

The agent try to initialize the settings from the __agent.cfg__
config file.

It looks for the file in these location:

- /etc/fusioninventory/agent.cfg
- /usr/local/etc/fusioninventory/agent.cfg

You can use the __\--conf-file=XXX__ parameter to load you own configuration
file from a specific location.
On Windows the settings are loaded from the Registry. The configuration file
is ignored.

The command line parameters overwrite the configuration file.

# SECURITY

Some modules like SNMPQuery needs to sent credential from the agent to the
agent. We recommend to enable HTTPS support on the OCS or FusionInventory
For GLPI server. We also recommend to use only trusted machine as agent in
this case.

# AUTHORS

The FusionInventory project [fusioninventory-devel@lists.alioth.debian.org](http://search.cpan.org/perldoc?fusioninventory-devel@lists.alioth.debian.org)

The maintainer is Goneri LE BOUDER <goneri@rulezlan.org>

Please read the AUTHORS, Changes and THANKS files to see who is behind
FusionInventory.

# SEE ALSO

        - FusionInventory website: [http://www.FusionInventory.org/](http://www.FusionInventory.org/)
        - project Forge: [http://Forge.FusionInventory.org](http://Forge.FusionInventory.org)
        - The source code of the agent is available on:
        - Gitorious: [http://gitorious.org/fusioninventory](http://gitorious.org/fusioninventory)
    - Github: [http://github.com/fusinv/fusioninventory-agent](http://github.com/fusinv/fusioninventory-agent)

        - The mailing lists:
        - [http://lists.alioth.debian.org/mailman/listinfo/fusioninventory-devel](http://lists.alioth.debian.org/mailman/listinfo/fusioninventory-devel)
    - [http://lists.alioth.debian.org/mailman/listinfo/fusioninventory-user](http://lists.alioth.debian.org/mailman/listinfo/fusioninventory-user)

- IRC: \#FusionInventory on FreeNode IRC Network

# BUGS

Please, use the mailing lists as much as possible. You can also use the bugtracker on
http://forge.fusionInventory.org



# COPYRIGHT

Copyright (C) 2006-2010 OCS Inventory contributors
Copyright (C) 2010-2012 FusionInventory Team

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

The memconf script is maintained by Tom Schmidt
http://myweb.cableone.net/4schmidts/memconf.html
Copyright © 1996-2009 Tom Schmidt

memconf is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

FusionInventory::Agent::Backend::Virtualization::Vmsystem uses code from
imvirt:

    Authors:
      Thomas Liske <liske@ibh.de>

    Copyright Holder:
      2008 (C) IBH IT-Service GmbH [http://www.ibh.de/]

    License:
      This program is free software; you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation; either version 2 of the License, or
      (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this package; if not, write to the Free Software
     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
     USA



# NAME

fusioninventory-agent - FusionInventory agent For Linux/UNIX, Windows and MacOSX

# SYNOPSIS

__fusioninventory-agent__ \[options\] \[--server server|--local directory|--sdout\]

    Target definition options
      -s --server=URI     send tasks result to a server
      -l --local=DIR      write tasks results in a directory
      --stdout            write tasks result on STDOUT

    Target scheduling options
      --delaytime=DURATION        maximum initial delay before first target, in seconds (3600)
      -w --wait=DURATION          maximum delay between each target, in seconds
      --lazy                      do not contact the target before next scheduled time

    Task selection options
      --list-tasks        list available tasks and exit
      --no-task=TASK      do not run given task

    Inventory task specific options
      --no-category=CATEGORY do not list given category items
      --scan-homedirs     allow to scan use home directories (false)
      --html              save the inventory as HTML (false)
      -f --force          always send data to server (false)
      -t --tag=TAG        mark the machine with given tag
      --backend-collect-timeout   timeout for inventory modules execution (30)
      --additional-content=FILE   additional inventory content

    Package deployment task specific options
      --no-p2p            do not use peer to peer to download files (false)

    Network options:
      -P --proxy=PROXY    proxy address
      -u --user=USER      user name for server authentication
      -p --password=PWD   password for server authentication
      --ca-cert-dir=D     path to the CA certificates directory
      --ca-cert-file=F    path to the CA certificates file
      --no-ssl-check      do not check server SSL certificates (false)
      --timeout           connection timeout (180)

    Web interface options
      --no-httpd                 disable embedded web server (false)
      --httpd-ip=IP              network interface to listen to
      --httpd-port=PORT          network port to listen to (62354)
      --httpd-trust=RANGE        trust requests from range without authentication token (false)

    Logging options
      --logger=BACKEND            logger backend [Stderr|File|Syslog] (Stderr)
      --logfile=FILE              log file
      --logfile-maxsize=X         maximum size of the log file in MB (0)
      --logfacility=FACILITY      syslog facility (LOG_USER)
      --color                     use color in the console (false)

    Configuration options
      --config=BACKEND            configuration backend [file|registry|none]
      --conf-file=FILE            configuration file

    Execution mode options
      -d --daemon                 run the agent as a daemon (false)
      --no-fork                   don't fork in background (false)
      --debug                     debug mode (false)
      --version                   print the version and exit

# EXAMPLES

    % fusioninventory-agent --server localhost
    # execute all available tasks required by a local server

    % fusioninventory-agent --server http://localhost/ocsinventory2
    # execute all available tasks required by a local server, using a specific
    # URI

    % fusioninventory-agent --server https://localhost/ocsinventory
    # execute all available tasks required by a local server, using a secure
    # connection

    % fusioninventory-agent --server localhost --user test --password s3cr3t
    # execute all available tasks required by a local server, using HTTP
    # authentication

    % fusioninventory-agent --local /tmp
    # execute all available tasks and write the result in /tmp directory

    % fusioninventory-agent --local /tmp --html
    # execute all available tasks and write the result in /tmp directory in
    # HTML format

# DESCRIPTION

`fusioninventory-agent` is an agent for OCS Inventory server and
FusionInventory for GLPI servers. It creates local inventory of the machines
(hardware and software) and send it to the server. It can also write it
in a local XML file.
This agent is the successor of the former linux\_agent which was released with
OCS 1.01 and prior. It also replaces the Solaris/AIX/BSD unofficial agents.

Supported systems:

- `Windows` (since Windows 2000)
- `GNU/Linux`
- `MacOSX`
- `Solaris`
- `FreeBSD`
- `NetBSD`
- `OpenBSD`
- `AIX`
- `HP-UX`
- `GNU/kFreeBSD`

# OCS INVENTORY PROTOCOL

FusionInventory Agent uses OCS Inventory protocol and is compatible with OCS
Inventory server. The agent uses the same protocol with the FusionInventory
For GLPI plugin.

The OCS protocol is basicly an exchange of XML file done over HTTP(S).

## First, The PROLOG

The agent send a first message to give it's ID (DEVICEID). The
server send back to the agent an XML file with a list of parameter. It's the
PROLOG RESP. You can see it if you're in Debug mode.
In this PROLOG, the server send the PROLOG\_FREQ. The agent will use it to
know when it need to contact the server for the next time.

The agent compute the next query date this way:

     PROLOG_FREQ/2+RANDOM(PROLOG_FREQ/2)



## Module execution

The agent will launch each modules and pass the list of options found in the
PROLOG RESP as parameter. The module can send information directly to the
server (inventory, SNMP scan result, etc)

## Server mode (Windows service or Unix daemon)

In server mode, the agent wait during a period between the last PROLOG and
PROLOG\_FREQ. If PROLOG\_FREQ is not set, it will use --delaytime value.
The default value is 3600.

# OPTIONS

Most of the options are available in a _short_ form and a _long_ form.  For
example, the two lines below are all equivalent:

    % fusioninventory-agent -s localhost
    % fusioninventory-agent --server localhost

## Target definition options



- __\-s__, __\--server__=_URI_

Send results of tasks execution to given server.

If _URI_ doesn't start with http:// or https://, the agent assume the
parameter is a hostname and rewrite it as:

    % --server=http://servername/ocsinventory

In general, OCS Inventory server URL have this format:

    http://servername/ocsinventory

and FusionInventory for GLPI this one:

    http://servername/glpi/plugins/fusioninventory/front/plugin_fusioninventory.communication.php

Multiple values can be specified, using comma as a separator.

- __\-l__, __\--local__=_DIR_

Write the results of tasks execution to given directory.

- __\--stdout__

Write the results of tasks execution on stdout.

## Target scheduling options

- __\--delaytime__=_LIMIT_

Set an initial delay before the first target, whose value is computed randomly
between LIMIT / 2 and LIMIT seconds. This setting is ignored for server targets
after the initial contact, in favor of server-specified parameter
(PROLOG\_FREQ).

- __\-w__ _LIMIT_, __\--wait__=_LIMIT_

Set a delay between each targets, whose value is computed randomly between 0
and LIMIT seconds.

- __\--lazy__

Do not contact the target before next scheduled time.

This option is only available when the agent is not run as a server.

## Task selection options

- __\--no-task__=_TASK_

Disable the given task

- __\--list-tasks__

List available tasks and exit

## Inventory task specific options

- __\--no-category__=_CATEGORY_

Do not list given category items in inventory. It can be:

                - printer
            - software
        - environment
    - process

- __\--scan-homedirs__

Allow the agent to scan home directories for virtual machines.

- __\--html__

Save the inventory as HTML.

This is only used for local inventories.

- __\-f__, __\--force__

Send an inventory to the server, even if this last one doesn't ask for it.

- __\--tag__=_TAG_

Mark the machine with given tag.

- __\--backend-collect-timeout__=_TIME_

Timeout for inventory modules execution.

## Package deployment task specific options

- __\--no-p2p__

Do not use peer to peer to download files.

## Server target specific options

- __\-P__, __\--proxy__=_PROXY_

Use _PROXY_ as HTTP proxy.

By default, the agent uses HTTP\_PROXY environment variable.

- __\-u__ _USER_, __\--user__=_USER_

Use _USER_ for server authentication.

- __\-p__, __\--password__=_PASSWORD_

Use _PASSWORD_ for server authentication.

- __\--ca-cert-dir__=_PATH_

Path to the CA certificates directory.

- __\--ca-cert-file__=_FILE_

Path to the CA certificates file.

- __\--no-ssl-check__

Do not check server SSL certificates.

Hint: you can set HTTPS\_DEBUG environment variable to get SSL error messages in
the console.

## Web interface options

- __\--no-httpd__

Disable the embedded web server.

- __\--httpd-ip__=_IP_

The network interface to use for the embedded web server (all 
available interfaces).

- __\--httpd-port__=_PORT_

The network port to use for the embedded web server (62354).

- __\--httpd-trust__=_RANGE_

Trust requests from given range without authentication token (false).

For example: "192.168.0.0/24", "192.68.168.0.5" or an IP range like
"20.34.101.207 - 201.3.9.99". See [Net::IP](http://search.cpan.org/perldoc?Net::IP) documentation to get more example.

## Logging options

- __\--logger__=_BACKEND_

Logger backend to use. It can be:

            - Stderr: log messages directly in the console.
        - File: log messages in a file.
    - Syslog: log messages through the local syslog server

Multiple values can be specified, using comma as a separator.

- __\--logfile__=_FILE_

Log message in _FILE_ (implies File logger backend)

- __\--logfile-maxsize__=_FILE_

Max logfile size in MB, default is unlimited. When the max size is reached, the
file is truncated. This is only useful if there is no log rotation mechanism on
the system.

- __\--logfacility__=_FACILITY_

Syslog facility to use (default LOG\_USER)

- __\--color__

Display color on the terminal, when the Stderr backend is used.

This options is ignored on Windows.

## Configuration options

- __\--conf-file__=_FILE_

Use _FILE_ as configuration file (implies file configuration backend)

- __\--config__=_BACKEND_

Configuration backend to use. It can be:

            - file: read configuration from a file (default anywhere else as Windows)
        - registry: read configuration from the registry (default on Windows)
    - none: don't read any configuration

## Execution mode options

- __\-d__, __\--daemon__

Run the agent as a daemon.

- __\--no-fork__

Don't fork in background.

This is only useful when running as a daemon.

- __\--debug__

Turn the debug mode on.

- __\--setup__

Print the agent setup directories and exit.

- __\--version__

Print the version and exit.

# CONFIGURATION

The agent is able to use multiple configuration backends. The registry backend
is the default on Windows platform, and the file backend is the default
everywhere else. Another backend can be specified using the __\--config__ option.

The _file_ backend reads configuration directives from a configuration file,
whose default location is determined at installation time as
PREFIX/etc/agent.cfg. An alternative location can also be given with
__\--conf-file__ option.

The _registry_ backend reads configuration directives from the Windows
registry, with an arch-dependant location:

- `HKEY\_LOCAL\_MACHINE\\SOFTWARE\\FusionInventory-Agent` for 32 bits machines
- `HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Wow6432Node\\FusionInventory-Agent` for 64 bits machines

The _none_ backend doesn't read any configuration directive at all, allowing
to isolate the agent execution from any installed configuration.

# NAME

fusioninventory-agent - FusionInventory agent For Linux/UNIX, Windows and MacOSX

# SYNOPSIS

__fusioninventory-agent__ \[options\] \[--server server|--local path\]

    Target definition options:
      -s --server=URI                send tasks result to a server
      -l --local=PATH                write tasks results locally

    Target scheduling options:
      --delaytime=LIMIT              maximum delay before first target,
                                       in seconds (3600)
      --lazy                         do not contact the target before
                                     next scheduled time

    Task selection options:
      --list-tasks                   list available tasks and exit
      --no-task=TASK                 do not run given task

    Inventory task specific options:
      --no-category=CATEGORY         do not list given category items
      --scan-homedirs                scan use home directories (false)
      --html                         save the inventory as HTML (false)
      -f --force                     always send data to server (false)
      -t --tag=TAG                   mark the machine with given tag
      --backend-collect-timeout=TIME timeout for inventory modules
                                       execution (30)
      --additional-content=FILE      additional inventory content file

    Package deployment task specific options:
      --no-p2p                       do not use peer to peer to download
                                       files (false)

    Network options:
      -P --proxy=PROXY               proxy address
      -u --user=USER                 user name for server authentication
      -p --password=PASSWORD         password for server authentication
      --ca-cert-dir=DIRECTORY        CA certificates directory
      --ca-cert-file=FILE            CA certificates file
      --no-ssl-check                 do not check server SSL certificate
                                       (false)
      --timeout=TIME                 connection timeout, in seconds (180)

    Web interface options:
      --no-httpd                     disable embedded web server (false)
      --httpd-ip=IP                  network interface to listen to (all)
      --httpd-port=PORT              network port to listen to (62354)
      --httpd-trust=IP               trust requests without authentication
                                       token (false)

    Logging options:
      --logger=BACKEND               logger backend (stderr)
      --logfile=FILE                 log file
      --logfile-maxsize=SIZE         maximum size of the log file in MB (0)
      --logfacility=FACILITY         syslog facility (LOG_USER)
      --color                        use color in the console (false)

    Configuration options:
      --config=BACKEND               configuration backend
      --conf-file=FILE               configuration file

    Execution mode options:
      -w --wait=LIMIT                maximum delay before execution,
                                       in seconds
      -d --daemon                    run the agent as a daemon (false)
      --no-fork                      don't fork in background (false)
      --debug                        debug mode (false)
      --setup                        print the agent setup directories
                                       and exit
      --version                      print the version and exit

# DESCRIPTION

The `fusioninventory-agent` agent is a generic multi-platform agent. It can
perform a large array of management tasks, such as local inventory, software
deployment or network discovery. It can be used either standalone, or in
combination with a compatible server (OCS, GLPI, OTRS) acting as a centralized
control point.

# OPTIONS

Most of the options are available in a _short_ form and a _long_ form.  For
example, the two lines below are all equivalent:

    % fusioninventory-agent -s localhost
    % fusioninventory-agent --server localhost

## Target definition options

- __\-s__, __\--server__=_URI_

Send the results of tasks execution to given server.

If _URI_ doesn't start with http:// or https://, the agent assume the
parameter is a hostname and rewrite it as:

    % --server=http://servername/ocsinventory

In general, OCS Inventory server URL have this format:

    http://servername/ocsinventory

and FusionInventory for GLPI this one:

    http://servername/glpi/plugins/fusioninventory/front/plugin_fusioninventory.communication.php

Multiple values can be specified, using comma as a separator.

- __\-l__, __\--local__=_PATH_

Write the results of tasks execution locally.

Exact behaviour according to given path:

            - if _PATH_ is a directory, a file will be created therein
        - if _PATH_ is a file, it will be used directly
    - if _PATH_ is '-', STDOUT will be used

Multiple values can be specified, using comma as a separator.

## Target scheduling options

- __\--delaytime__=_LIMIT_

Set an initial delay before the first target, whose value is computed randomly
between LIMIT / 2 and LIMIT seconds. This setting is ignored for server targets
after the initial contact, in favor of server-specified parameter
(PROLOG\_FREQ).

- __\--lazy__

Do not contact the target before next scheduled time.

This option is only available when the agent is not run as a server.

## Task selection options

- __\--list-tasks__

List available tasks and exit

- __\--no-task__=_TASK_

Do not run given task.

Multiple values can be specified, using comma as a separator. See option
_\--list-tasks_ for the list of available tasks.

## Inventory task specific options

- __\--no-category__=_CATEGORY_

Do not list given category items in inventory.

Multiple values can be specified, using comma as a separator. The available
categories are:

                - printer
            - software
        - environment
    - process

- __\--scan-homedirs__

Allow the agent to scan home directories for virtual machines.

- __\--html__

Save the inventory as HTML.

This is only used for local inventories.

- __\-f__, __\--force__

Send an inventory to the server, even if this last one doesn't ask for it.

- __\--tag__=_TAG_

Mark the machine with given tag.

- __\--backend-collect-timeout__=_TIME_

Timeout for inventory modules execution.

- __\--additional-content__=_FILE_

Additional inventory content file.

This file should be an XML file, using same syntax as the one produced by the
agent.

## Package deployment task specific options

- __\--no-p2p__

Do not use peer to peer to download files.

## Server target specific options

- __\-P__, __\--proxy__=_PROXY_

Use _PROXY_ as HTTP proxy.

By default, the agent uses HTTP\_PROXY environment variable.

- __\-u__ _USER_, __\--user__=_USER_

Use _USER_ for server authentication.

- __\-p__, __\--password__=_PASSWORD_

Use _PASSWORD_ for server authentication.

- __\--ca-cert-dir__=_DIRECTORY_

CA certificates directory.

- __\--ca-cert-file__=_FILE_

CA certificates file.

- __\--no-ssl-check__

Do not check server SSL certificate.

- __\--timeout__=_TIME_

Timeout for server connections.

## Web interface options

- __\--no-httpd__

Disable the embedded web server.

- __\--httpd-ip__=_IP_

The network interface to use for the embedded web server (all).

- __\--httpd-port__=_PORT_

The network port to use for the embedded web server (62354).

- __\--httpd-trust__=_IP_

Trust requests from given addresses without authentication token (false).

For example: "192.168.0.0/24", "192.168.168.0.5" or an IP range like
"20.34.101.207 - 201.3.9.99". Hostnames are also accepted. See [Net::IP](http://search.cpan.org/perldoc?Net::IP)
documentation to get more example.

Multiple values can be specified, using comma as a separator.

## Logging options

- __\--logger__=_BACKEND_

Logger backend to use.

Multiple values can be specified, using comma as a separator. The available
backends are:

            - stderr: log messages directly in the console.
        - file: log messages in a file.
    - syslog: log messages through the local syslog server.

Multiple values can be specified, using comma as a separator.

- __\--logfile__=_FILE_

Log message in _FILE_ (implies File logger backend).

- __\--logfile-maxsize__=_SIZE_

Max logfile size in MB, default is unlimited. When the max size is reached, the
file is truncated. This is only useful if there is no log rotation mechanism on
the system.

- __\--logfacility__=_FACILITY_

Syslog facility to use (default LOG\_USER).

- __\--color__

Display color on the terminal, when the Stderr backend is used.

This options is ignored on Windows.

## Configuration options



- __\--config__=_BACKEND_

Configuration backend to use.

The available backends are:

            - file: read configuration from a file (default anywhere else as Windows).
        - registry: read configuration from the registry (default on Windows).
    - none: don't read any configuration.

- __\--conf-file__=_FILE_

Use _FILE_ as configuration file (implies file configuration backend).

## Execution mode options

- __\-w__ _LIMIT_, __\--wait__=_LIMIT_

Wait a random delay whose value is computed randomly between 0 and LIMIT
seconds, before execution. This is useful when execution is triggered from some
kind of system scheduling on multiple clients, to spread the server load.

- __\-d__, __\--daemon__

Run the agent as a daemon.

- __\--no-fork__

Don't fork in background.

This is only useful when running as a daemon.

- __\--debug__

Turn the debug mode on.

- __\--setup__

Print the agent setup directories and exit.

- __\--version__

Print the version and exit.
