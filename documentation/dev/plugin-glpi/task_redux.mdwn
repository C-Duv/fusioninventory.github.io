Fusioninventory Plugin for GLPI - Tasks Redux

[[!toc levels=4]]

# Tasks redux

* Move tasks summary GUI into an appropriate tab/screen called Reporting (like using native GLPI reporting facilities or mReporting optional plugin)
* Rework task summary categories and layout (TODO: we welcome any mockup and propositions)
* Add history log on tasks


## Tasks GUI


* Externalize taskjobs reports in an independant page and base the display of this page on what have been done with the Deploy reports status

[[!template  id=info text="""
**TODO**

Add some mockup within this page or linked to another page if there are too many elements that makes this page unreadable.
"""]]

* Split tasks from jobs to simplify the process
    * Create a Jobs management tab outside the tasks
    * We should be able to create Jobs in task management screen (cf. Package interface)
    * Tasks are only considered as crontab-like tasks.
    * Display the jobs list line by line.
    * Create some helper class which helps to list jobs associated to some task. For each Jobs linked, we must have:
        * some timeout (or delay) before running a job.
        * regroup every job by starting time.

* Jobstates are generated according to their delay and in the resultant order :

        example:
            * Wakeonlan 1 - no delay
            * Deploy 1    - no delay
            * Deploy 2    - 2 hours

        results:
            * at t+0, [Wakeonlan 1] and [Deploy 1] tasks are generated and ready to be executed by the agents.
            * at t+1h, nothing to be done
            * at t+2h, [Deploy 2] is generated and ready to be executed by the agents.

[[!template  id=info text="""
**TODO**

* Explain in detail the delay time. Maybe we can use some sort of maximum
duration in addition to the delay a task in order to limit usage on certain time slots.
"""]]


## Tasks monitoring



