**Fusion server (SNMP tool server)**

[[!toc levels=4]]

# Communication

## Protocol

The protocol used is the HTTP.
The client (plugin Fusioninventory for GLPI) use curl to get/send data.

## Port 

The port configured in the server is: 9000.
But to access it, we use port 80, because the reverse proxy redirect port 80 (frontend) to port 9000 (backend)

## Many connections

To manage many connections, all new connection is started in a new thread and is destroyed when finish run operations

# Data format

## JSON

The dat received is in JSON format in the POST value of HTTP

## Composition of messages

All messages are 2 parts:

### 'auth' => authentication
Authentication is verified on each data received by server
this auth has 3 values:
* login
* password
* key
for example: {"auth":{"login":"ddurieux","password":"oh my god","key":"5678"}}

### Methods

The second part of data is a method. This is a description:

#### getSysdescr

Get 2 values:

* sysdescr
* itemtype

Server return information of this sysdescr if exist in the DB

#### getdeviceid

Get 1 value:

* id of the device 

Server return information of this id if exist in the DB


#### getallmodels

Get simple list of all devices + models associated


#### setLock

Set a lock in a device. This lock is a date + user account and deny all other user modify this device (and so oids) for one hour

#### getDevice

Get all oids, mibs, mapping and calculate % of the usage of this oid in all models and send to client


#### updateMib

Update oids for the device and at the end, regenerate the model if something is modified


#### createSingleModel

Generate XML SNMP model and return to client (in the JSON format of course) only for a device

#### getSingleModel

Only return to client the XML SNMP model (in the JSON format of course) only for a snmpmodel id

#### getMultipleModel

Only return to client XML SNMP models (in the JSON format of course) for an array of snmpmodel id

#### addOid
 
Add possibility to ad a new oid with its mapping

Require fields:

* mapping
* numeric_oid
* mib_oid
* nboids_after
