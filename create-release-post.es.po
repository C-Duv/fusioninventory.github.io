# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-09-21 12:38+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#, no-wrap
msgid "#!/usr/bin/perl\n"
msgstr ""

#. type: Plain text
msgid "use strict; use warnings;"
msgstr ""

#. type: Plain text
msgid ""
"use DateTime::Format::Mail; use File::Basename; use File::Path "
"qw(make_path); use LWP::Simple; use Archive::Tar; use File::Temp qw/ "
"tempfile /; use Data::Dumper;"
msgstr ""

#. type: Plain text
msgid ""
"my $url = shift; die \"please pass tarball URL as parameter\\n\" unless "
"$url;"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"print $url. \"\\n\";\n"
"my ( undef, $tarfile ) = tempfile();\n"
"getstore( $url, $tarfile );\n"
"my $tar = Archive::Tar->new;\n"
"$tar->read($tarfile);\n"
"my @files = $tar->list_files() or die;\n"
msgstr ""

#. type: Plain text
msgid ""
"my $project; my $projectWithDash; my $release; my $changelog; foreach my "
"$file (@files) {"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    #print$file.\"\\n\";\n"
"    if ( $file =~ /(FusionInventory-Agent.*?)-([\\d\\.]+)\\/Changes/ ) {\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"        $project = $1;\n"
"        $projectWithDash = $1;\n"
"        $release = $2;\n"
"        print $file. \"\\n\";\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"        $projectWithDash =~ s/-/ /g;\n"
"        $changelog = $tar->get_content($file);\n"
"    }\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"}\n"
"my $in;\n"
"my $file;\n"
"foreach my $line (split(/\\n/, $changelog)) {\n"
"    chomp($line);\n"
"    if ( $line =~ /^$release\\s+(\\S.*)/ ) {\n"
"        my $date = $1;\n"
"        my $datetime = DateTime::Format::Mail->parse_datetime($date);\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"        $file =\n"
"          sprintf( \"news/%d/%02d/%02d/%s-%s.mdwn\",\n"
"            $datetime->year, $datetime->month, $datetime->day, $project, "
"$release );\n"
"        make_path( dirname($file) );\n"
"        open OUT, \">$file\" or die;\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"        print OUT \"[[!meta  date=\\\"\"\n"
"          . $datetime->ymd\n"
"          . \"\\\"]]\\n\"\n"
"          . \"Hello FusionInventory users,\\n\\n\"\n"
"          . \"The $projectWithDash maintainers are glad to announce the "
"$release release.\\n\\n\"\n"
"          . \"You can download the archive from [the forge]($url)\\n\"\n"
"          . \"or directly from [the "
"CPAN](https://metacpan.org/release/$project)\\n\\n\"\n"
"          . \"## This release changelog\\n\\n\";\n"
"        $in = 1;\n"
"    }\n"
"    elsif ( $in && $line =~ /^\\d/ ) {\n"
"        last;\n"
"    }\n"
"    elsif ( $in && $line =~ /^(\\w.*)$/ ) {\n"
"        print OUT \"### $1\\n\\n\";\n"
"    }\n"
"    elsif ($in) {\n"
"        print OUT $line . \"\\n\";\n"
"    }\n"
msgstr ""

#. type: Plain text
msgid "}"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"print OUT \"\\n\\nWe did our best to provide a solid release, please "
"[[contact us|/resources]] is you believe you \"\n"
"        . \"find something unexpected.\";\n"
msgstr ""

#. type: Plain text
msgid ""
"system(\"vim\", $file); system(\"mutt\", \"-i\", $file, \"-s\", "
"\"$projectWithDash $release released!\", "
"'fusioninventory-user@lists.alioth.debian.org', )"
msgstr ""
